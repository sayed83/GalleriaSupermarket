@model GalleriaSupermarket.Models.ViewModel.ProductImageVm

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

<section class="content-header">
    <h1>
        Item Create
        <small>it all starts here</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Item</a></li>
        <li><a href="#">Create</a></li>
    </ol>
</section>
<section class="content">

    <div class="related-link">
        <ul class="rel-list">
            <li>
                <a href="@Url.Action("Create","Size")" class="btn btn-info">Add Size</a>
            </li>
            <li>
                <a href="@Url.Action("Create","Brand")" class="btn btn-warning">Add Brand</a>
            </li>
            <li>
                <a href="@Url.Action("Create","Brand")" class="btn btn-primary">Add Subcategory</a>
            </li>

        </ul>
    </div>

    @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model=>model.ProductID)

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <label class="control-label col-md-2">Category</label>
                <div class="col-md-10">
                    <select id="CategoryID" class="form-control">
                        <option value="@Model.CategoryID">@Model.CategoryName</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Subcategory</label>
                <div class="col-md-10">
                    <select id="SubCategoryID" name="SubCategoryID" class="form-control">
                        <option value="@Model.SubCategoryID">@Model.SubCategoryName</option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Unit</label>
                <div class="col-md-5">
                    <select id="Unit" name="Unit" class="form-control">
                        <option value="@Model.Unit">@Model.Unit</option>
                    </select>
                </div>
                <div class="col-md-5">
                    <select id="BrandID" name="BrandID" class="form-control">
                        <option value="@Model.BrandID">@Model.BrandName</option>
                    </select>
                </div>
            </div>
            <div class="form-group" id="SizeBox" style="display:none;">
                <label class="control-label col-md-2">Size</label>
                <div class="col-md-10">
                    <div class="checkbox-size" id="FandV">
                        <!--Size append here-->
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OtherPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OtherPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OtherPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @id = "DiscountAmnt", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Vat, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Vat, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Vat, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10 col-md-offset-2">
                    <input id="imageFile" type="file" name="ImageUpload" class="form-control" />
                    <div id="processImage-box">
                        <img src="/App_File/ProductImage/@Model.ImageUrl" id="processImage" class="process-image img-responsive" />
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</section>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#imageFile').on('change', BindImage);

            $('#CategoryID').change(function () {
                var $this = $(this);
                if ($this.val() == 1 && $('#Unit').val()==2) {
                    $('#SizeBox').hide();
                    $('#Size-row').show();
                } else {
                    $('#Size-row').hide();
                }
            });

            function BindImage(e) {
                var file = e.originalEvent.target.files[0];
                var reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = function (evt) {
                    $('#processImage').attr('src', '');
                    $('#processImage').attr('src', evt.target.result);
                };
            };

            //Get Category
            $.ajax({
                url: '/Home/GetCategories',
                type: 'GET',
                success: function (res) {
                    var html;
                    $.each(res, function (index, row) {
                        html = '<option value="' + row.id + '">' + row.name + '</option>';
                        $('#CategoryID').append(html);
                    })
                }
            });

            //Get Brand
            function GetBrands(bid) {
                $.ajax({
                    url: '/Product/GetBrandbySubcategory',
                    type: 'POST',
                    data:{brandId : bid},
                    dataType: 'json',
                    success: function (res) {
                        $('#BrandID').empty();
                        var common = { id: 0, name: '---- Select Brand ----' };
                        //res.splice(position, numberOfItemToRemove, item)
                        res.splice(0, 0, common); //Add array object
                        var html;
                        $.each(res, function (index, row) {
                            html = '<option value="' + row.id + '">' + row.name + '</option>';
                            $('#BrandID').append(html);
                        })
                    }
                })
            };

            $('#SubCategoryID').change(function () {
                var id = parseInt($(this).val());
                GetBrands(id);
                getFruitandVegSize(id);
                $('#SizeBox').show();
            });

            //Sorting the Json Result ASC
            function sortJsonSize(a, b) {
                return a.size.toLowerCase() > b.size.toLowerCase() ? 1 : -1;
            };

            function getFruitandVegSize(sid) {
                $.ajax({
                    url: '/Product/GetFruitSize',
                    type: 'POST',
                    data:{id:sid},
                    dataType: 'json',
                    success: function (res) {
                        res.sort(sortJsonSize);
                        $('#FandV').empty();
                        var html;
                        $.each(res, function (index, row) {
                            html = '<div class="checkbox"><label><input type="checkbox" name="SizeID[]" value="' + row.id + '" />' + row.size + '</label></div>';
                            $('#FandV').append(html);
                        });

                    }
                });
            }

            //Get Sub Category based on Category
            $('#CategoryID').change(function () {
                $('#SubCategoryID').empty();
                $.ajax({
                    url: '/Home/GetSubCategories',
                    type: 'POST',
                    data: { id: $('#CategoryID').val() },
                    dataType: 'json',
                    success: function (res) {
                        var html;
                        var resData = $.isEmptyObject(res);//check array empty or not :: return true or false
                        if (resData === true) {
                            $('#SubCategoryID').attr('disabled',true);
                            html = '<option value="0">No Data Available</option>';
                            $('#SubCategoryID').append(html);
                        } else {
                            var common = { id: 0, name: '---- Select Sub Category ----' }
                            //res.splice(position, numberOfItemToRemove, item)
                            res.splice(0, 0, common); //Add array object
                            $.each(res, function (index, row) {
                                $('#SubCategoryID').removeAttr('disabled');
                                html = '<option value="' + row.id + '">' + row.name + '</option>';
                                $('#SubCategoryID').append(html);
                            })
                        }

                    }
                })
            });

        });
    </script>
}
